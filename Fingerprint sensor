import time
from pyfingerprint.pyfingerprint import PyFingerprint
import RPi.GPIO as gpio
print ("Successfully imported fingerprint module")
gpio.setwarnings(False)
gpio.setmode(gpio.BCM)
try:
    f = PyFingerprint('/dev/ttyUSB0', 57600, 0xFFFFFFFF ,0x00000000)
except Exception as e:
    print('Exception Message'+str(e))
def enrollFinger():
    print('Enrolling finger')
    time.sleep(3)
    print('Place finger')
    while(f.readImage()==False):
        pass
    f.convertImage(0x01)
    result=f.searchTemplate()
    postionNumber = result[0]
    if (positionNumber >=0):
        print('Template already exists at position #'+str(positionNumber))
        time.sleep(2)
        return
    print('Remove finger')
    print('Waiting for same finger')
    time.sleep(3)
    while(f.readImage()==False):
        pass
    f.convertImage(0X02)
    if(f.compareCharacteristics()==0):
        print('Fingers do not match')
        time.sleep(2)
        return
    else:
        f.createTemplate()
        positionNumber=f.storeTemplate()
        print('Finger enrolled successfully')
        print('Stored at pos: ' +str(positionNumber))
        time.sleep(2)
def searchFinger():
    try:
        print('Waiting for finger...')
        time.sleep(2)
        while(f.readImage()==False):
            time.sleep(4)
            return
        f.convertImage(0X01)
        result = f.searchTemplate()
        positionNumber = result[0]
        if positionNumber==-1:
            print('No match found')
            time.sleep(4)
            return False
    else:
        print('Found template at position'+str(positionNumber))
        time.sleep(4)
except Exception True
        print('Operation failed')
        print('Exception message:'+str(c))
        exit(1)
        return
    def deleteFinger():
        try:
            print('Waiting for finger...')
            time.sleep(2)
            while(f.readImage()==False):
                time.sleep(4)
                return False
        else:
            if(f.delete Template(positionNumber)==True):
                print('Finger deleted')
                time.sleep(4)
                return True
except Exception as e:
    print('Operation failed')
    print('Exception Message:'+str(e))
    exit(1)
    time.sleep(1)
    print('Start')
while True:
    i=int(input("\nEnter:\n1.Enroll\n2.Search\n3.Delete\n4.Exit"))
    if i==1:
        enrollFinger()
    elif i==2:
        searchFinger()
    elif i==3:
        deleteFinger()
    elif i==4:
        break
    else:
        print("Invalid operation!!!Enter valid")
